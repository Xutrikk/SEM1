#include <iostream>  // Подключение библиотеки для ввода/вывода
#include <ctime>     // Подключение библиотеки для работы со временем
using namespace std;

int main()
{
    setlocale(LC_ALL, "RUS");  // Установка локали для вывода на русском языке
    const int N = 3;  // Задание размера матрицы
    int mas[N][N];    // Объявление матрицы
    int i, j, sum, max_count;  // Объявление переменных
    srand(time(NULL));  // Инициализация генератора случайных чисел

    cout << "Максимальное значение элемента: ";
    cin >> max_count;  // Ввод максимального значения элемента

    cout << "Матрица: " << endl;  // Вывод сообщения о начале вывода матрицы
    for (i = 0; i < N; i++)  // Цикл по строкам
    {
        for (j = 0; j < N; j++)  // Цикл по столбцам
        {
            mas[i][j] = rand() % max_count;  // Заполнение элемента матрицы случайным числом
            cout << mas[i][j] << "\t";  // Вывод элемента матрицы
        }
        cout << "\n";  // Переход на новую строку после завершения строки матрицы
    }

    // Поиск и вывод суммы элементов выше главной диагонали
    int s = 0;
    for (int i = 0; i < N; ++i)  // Цикл по строкам
    {
        for (int j = 0; j < N; ++j)  // Цикл по столбцам
        {
            if (i < j)  // Если номер строки < номера столбца, то это элемент выше главной диагонали
            {
                cout << mas[i][j] << ", ";  // Вывод элемента
                s += mas[i][j];  // Добавление элемента к сумме
            }
        }
    }
    cout << "Сумма элементов, которые выше главной диагонали: " << s;  // Вывод суммы
    cout << "\n";  // Переход на новую строку

    // Поиск и вывод суммы элементов ниже главной диагонали
    int s1 = 0;
    cout << "\n";  // Переход на новую строку
    for (int i = 0; i < N; ++i)  // Цикл по строкам
    {
        for (int j = 0; j < N; ++j)  // Цикл по столбцам
        {
            if (i > j)  // Если номер строки > номера столбца, то это элемент ниже главной диагонали
            {
                cout << mas[i][j] << ", ";  // Вывод элемента
                s1 += mas[i][j];  // Добавление элемента к сумме
            }
        }
    }
    cout << "Сумма элементов, которые ниже главной диагонали: " << s1;  // Вывод суммы
}