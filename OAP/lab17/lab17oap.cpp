#include <iostream> // Подключение библиотеки ввода-вывода

using namespace std; // Использование пространства имен std

// Функция для нахождения индекса минимального элемента в массиве
int minIndex(int* arr, int size) {
	int result = 0; // Инициализация результата нулем
	for (int i = 1; i < size; i++) { // Цикл по всем элементам массива
		if (arr[result] > arr[i]) // Если текущий минимальный элемент больше текущего элемента
			result = i; // Обновление результата
	}
	return result; // Возврат результата

}

int main() // Главная функция
{
	setlocale(LC_ALL, "RUS"); // Установка локали
	int* arr = NULL; // Инициализация указателя на массив
	int size; // Объявление размера массива
	cout << "Размер: "; // Вывод сообщения о вводе размера
	cin >> size; // Ввод размера
	arr = new int[size]; // Выделение памяти под массив

	srand(time(NULL)); // Инициализация генератора случайных чисел
	for (int i = 0; i < size; i++) { // Цикл по всем элементам массива
		arr[i] = -100 + rand() % 201; // Генерация случайного числа
		cout << arr[i] << " "; // Вывод элемента массива
	}
	int minIdx = minIndex(arr, size); // Нахождение индекса минимального элемента
	cout << endl << "min элемент =" << arr[minIdx] << endl; // Вывод минимального элемента
	if (minIdx == size - 1) { // Если минимальный элемент последний в массиве
		cout << "Минимальный элемент - последний в массиве."; // Вывод сообщения
	}
	int k = 0; // Инициализация счетчика
	for (int i = minIdx + 1; i < size; i++) { // Цикл по элементам после минимального
		if (arr[i] < 0) // Если элемент отрицательный
		{
			k = k + 1; // Увеличение счетчика
		}
	}
	cout << k << " " << "Отрицательных элементов находится после последнего минимального элемента" << endl; // Вывод количества отрицательных элементов
}
